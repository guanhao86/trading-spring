package com.spring.fee.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TableRepurchaseDetailExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table table_repurchase_detail
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table table_repurchase_detail
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table table_repurchase_detail
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_repurchase_detail
     *
     * @mbggenerated
     */
    public TableRepurchaseDetailExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_repurchase_detail
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_repurchase_detail
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_repurchase_detail
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_repurchase_detail
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_repurchase_detail
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_repurchase_detail
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_repurchase_detail
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_repurchase_detail
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_repurchase_detail
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table table_repurchase_detail
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table table_repurchase_detail
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andMemberIdIsNull() {
            addCriterion("member_id is null");
            return (Criteria) this;
        }

        public Criteria andMemberIdIsNotNull() {
            addCriterion("member_id is not null");
            return (Criteria) this;
        }

        public Criteria andMemberIdEqualTo(String value) {
            addCriterion("member_id =", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdNotEqualTo(String value) {
            addCriterion("member_id <>", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdGreaterThan(String value) {
            addCriterion("member_id >", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdGreaterThanOrEqualTo(String value) {
            addCriterion("member_id >=", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdLessThan(String value) {
            addCriterion("member_id <", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdLessThanOrEqualTo(String value) {
            addCriterion("member_id <=", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdLike(String value) {
            addCriterion("member_id like", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdNotLike(String value) {
            addCriterion("member_id not like", value, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdIn(List<String> values) {
            addCriterion("member_id in", values, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdNotIn(List<String> values) {
            addCriterion("member_id not in", values, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdBetween(String value1, String value2) {
            addCriterion("member_id between", value1, value2, "memberId");
            return (Criteria) this;
        }

        public Criteria andMemberIdNotBetween(String value1, String value2) {
            addCriterion("member_id not between", value1, value2, "memberId");
            return (Criteria) this;
        }

        public Criteria andRepurchaseValueIsNull() {
            addCriterion("repurchase_value is null");
            return (Criteria) this;
        }

        public Criteria andRepurchaseValueIsNotNull() {
            addCriterion("repurchase_value is not null");
            return (Criteria) this;
        }

        public Criteria andRepurchaseValueEqualTo(Float value) {
            addCriterion("repurchase_value =", value, "repurchaseValue");
            return (Criteria) this;
        }

        public Criteria andRepurchaseValueNotEqualTo(Float value) {
            addCriterion("repurchase_value <>", value, "repurchaseValue");
            return (Criteria) this;
        }

        public Criteria andRepurchaseValueGreaterThan(Float value) {
            addCriterion("repurchase_value >", value, "repurchaseValue");
            return (Criteria) this;
        }

        public Criteria andRepurchaseValueGreaterThanOrEqualTo(Float value) {
            addCriterion("repurchase_value >=", value, "repurchaseValue");
            return (Criteria) this;
        }

        public Criteria andRepurchaseValueLessThan(Float value) {
            addCriterion("repurchase_value <", value, "repurchaseValue");
            return (Criteria) this;
        }

        public Criteria andRepurchaseValueLessThanOrEqualTo(Float value) {
            addCriterion("repurchase_value <=", value, "repurchaseValue");
            return (Criteria) this;
        }

        public Criteria andRepurchaseValueIn(List<Float> values) {
            addCriterion("repurchase_value in", values, "repurchaseValue");
            return (Criteria) this;
        }

        public Criteria andRepurchaseValueNotIn(List<Float> values) {
            addCriterion("repurchase_value not in", values, "repurchaseValue");
            return (Criteria) this;
        }

        public Criteria andRepurchaseValueBetween(Float value1, Float value2) {
            addCriterion("repurchase_value between", value1, value2, "repurchaseValue");
            return (Criteria) this;
        }

        public Criteria andRepurchaseValueNotBetween(Float value1, Float value2) {
            addCriterion("repurchase_value not between", value1, value2, "repurchaseValue");
            return (Criteria) this;
        }

        public Criteria andRepurchaseTimeIsNull() {
            addCriterion("repurchase_time is null");
            return (Criteria) this;
        }

        public Criteria andRepurchaseTimeIsNotNull() {
            addCriterion("repurchase_time is not null");
            return (Criteria) this;
        }

        public Criteria andRepurchaseTimeEqualTo(Date value) {
            addCriterion("repurchase_time =", value, "repurchaseTime");
            return (Criteria) this;
        }

        public Criteria andRepurchaseTimeNotEqualTo(Date value) {
            addCriterion("repurchase_time <>", value, "repurchaseTime");
            return (Criteria) this;
        }

        public Criteria andRepurchaseTimeGreaterThan(Date value) {
            addCriterion("repurchase_time >", value, "repurchaseTime");
            return (Criteria) this;
        }

        public Criteria andRepurchaseTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("repurchase_time >=", value, "repurchaseTime");
            return (Criteria) this;
        }

        public Criteria andRepurchaseTimeLessThan(Date value) {
            addCriterion("repurchase_time <", value, "repurchaseTime");
            return (Criteria) this;
        }

        public Criteria andRepurchaseTimeLessThanOrEqualTo(Date value) {
            addCriterion("repurchase_time <=", value, "repurchaseTime");
            return (Criteria) this;
        }

        public Criteria andRepurchaseTimeIn(List<Date> values) {
            addCriterion("repurchase_time in", values, "repurchaseTime");
            return (Criteria) this;
        }

        public Criteria andRepurchaseTimeNotIn(List<Date> values) {
            addCriterion("repurchase_time not in", values, "repurchaseTime");
            return (Criteria) this;
        }

        public Criteria andRepurchaseTimeBetween(Date value1, Date value2) {
            addCriterion("repurchase_time between", value1, value2, "repurchaseTime");
            return (Criteria) this;
        }

        public Criteria andRepurchaseTimeNotBetween(Date value1, Date value2) {
            addCriterion("repurchase_time not between", value1, value2, "repurchaseTime");
            return (Criteria) this;
        }

        public Criteria andCurrentLevelIsNull() {
            addCriterion("current_level is null");
            return (Criteria) this;
        }

        public Criteria andCurrentLevelIsNotNull() {
            addCriterion("current_level is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentLevelEqualTo(Integer value) {
            addCriterion("current_level =", value, "currentLevel");
            return (Criteria) this;
        }

        public Criteria andCurrentLevelNotEqualTo(Integer value) {
            addCriterion("current_level <>", value, "currentLevel");
            return (Criteria) this;
        }

        public Criteria andCurrentLevelGreaterThan(Integer value) {
            addCriterion("current_level >", value, "currentLevel");
            return (Criteria) this;
        }

        public Criteria andCurrentLevelGreaterThanOrEqualTo(Integer value) {
            addCriterion("current_level >=", value, "currentLevel");
            return (Criteria) this;
        }

        public Criteria andCurrentLevelLessThan(Integer value) {
            addCriterion("current_level <", value, "currentLevel");
            return (Criteria) this;
        }

        public Criteria andCurrentLevelLessThanOrEqualTo(Integer value) {
            addCriterion("current_level <=", value, "currentLevel");
            return (Criteria) this;
        }

        public Criteria andCurrentLevelIn(List<Integer> values) {
            addCriterion("current_level in", values, "currentLevel");
            return (Criteria) this;
        }

        public Criteria andCurrentLevelNotIn(List<Integer> values) {
            addCriterion("current_level not in", values, "currentLevel");
            return (Criteria) this;
        }

        public Criteria andCurrentLevelBetween(Integer value1, Integer value2) {
            addCriterion("current_level between", value1, value2, "currentLevel");
            return (Criteria) this;
        }

        public Criteria andCurrentLevelNotBetween(Integer value1, Integer value2) {
            addCriterion("current_level not between", value1, value2, "currentLevel");
            return (Criteria) this;
        }

        public Criteria andCurrentRankIsNull() {
            addCriterion("current_rank is null");
            return (Criteria) this;
        }

        public Criteria andCurrentRankIsNotNull() {
            addCriterion("current_rank is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentRankEqualTo(Integer value) {
            addCriterion("current_rank =", value, "currentRank");
            return (Criteria) this;
        }

        public Criteria andCurrentRankNotEqualTo(Integer value) {
            addCriterion("current_rank <>", value, "currentRank");
            return (Criteria) this;
        }

        public Criteria andCurrentRankGreaterThan(Integer value) {
            addCriterion("current_rank >", value, "currentRank");
            return (Criteria) this;
        }

        public Criteria andCurrentRankGreaterThanOrEqualTo(Integer value) {
            addCriterion("current_rank >=", value, "currentRank");
            return (Criteria) this;
        }

        public Criteria andCurrentRankLessThan(Integer value) {
            addCriterion("current_rank <", value, "currentRank");
            return (Criteria) this;
        }

        public Criteria andCurrentRankLessThanOrEqualTo(Integer value) {
            addCriterion("current_rank <=", value, "currentRank");
            return (Criteria) this;
        }

        public Criteria andCurrentRankIn(List<Integer> values) {
            addCriterion("current_rank in", values, "currentRank");
            return (Criteria) this;
        }

        public Criteria andCurrentRankNotIn(List<Integer> values) {
            addCriterion("current_rank not in", values, "currentRank");
            return (Criteria) this;
        }

        public Criteria andCurrentRankBetween(Integer value1, Integer value2) {
            addCriterion("current_rank between", value1, value2, "currentRank");
            return (Criteria) this;
        }

        public Criteria andCurrentRankNotBetween(Integer value1, Integer value2) {
            addCriterion("current_rank not between", value1, value2, "currentRank");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table table_repurchase_detail
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table table_repurchase_detail
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}